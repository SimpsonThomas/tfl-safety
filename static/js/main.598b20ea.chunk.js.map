{"version":3,"sources":["simplePages/about.js","pages/report.js","constants/icons.js","constants/issues.js","pages/overview.js","constants/pages.js","core/navigation/navigation.js","core/components/persist.js","pages/issue.js","core/App.js","core/components/serviceWorker.js","index.js"],"names":["About","document","title","react_default","a","createElement","className","href","async","src","charset","Component","Report","role","aria-label","type","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","htmlFor","placeholder","iconList","cycles","bus","dlr","elizabeth","emirates","overground","twitter","underground","issues","0","where","when","what","1","2","3","Overview","path","window","location","preImage","hostname","pathname","height","alt","align","Object","keys","map","issueNo","number","issue","Fragment","react_router_dom","to","pageList","name","link","nav","side","component","Navigation","item","navClass","arguments","length","undefined","key","split","_this","this","data-target","aria-controls","page","navBut","initialState","loadState","serializedState","sessionStorage","getItem","JSON","parse","e","Issue","substring","console","log","fakeNumber","parseInt","react_plotly_default","data","x","y","mode","marker","color","orientation","layout","margin","l","r","b","t","pad","paper_bgcolor","plot_bgcolor","font","config","scrollZoom","staticPlot","App","props","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","react_router","exact","_this2","navigation_navigation","routeMaker","Boolean","match","ReactDOM","render","core_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.598b20ea.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass About extends Component {\n    render() {\n        document.title = 'About'\n        return (\n            <div className='container text-center content-center'>\n                <h3>Safety Reporting</h3>\n                <p>Hey, we're know it's a pain to report issues you on TfL services so we're building a web app to make it easier</p>\n                <br/>\n                <p>We are totally, completely and <b>UTTERLY UNOFFICIAL</b>, we are not TfL just some people building PoC</p>\n                <p>Do NOT give us any personal data - we are just building something for a Hackathon</p>\n\n                <p>Check us out on Twitter!</p>\n                <a className=\"twitter-timeline\" href=\"https://twitter.com/TfLSafety?ref_src=twsrc%5Etfw\">Tweets by TfLSafety</a> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n                \n            </div>\n        )\n    }\n}\n\nexport default About","import React, { Component } from \"react\";\n\nclass Report extends Component {\n    render() {\n        document.title = 'Report'\n        return (\n            <div className='container text-center content-center'>\n                <h3>Report an Incident</h3>\n                <br/>\n                <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary\">Cycle</button>\n                    <button type=\"button\" className=\"btn btn-outline-secondary\">Walking</button>\n                    <button type=\"button\" className=\"btn btn-outline-secondary\">Bus</button>\n                    <button type=\"button\" className=\"btn btn-outline-secondary\">Tube</button>\n                </div>\n                <br/><br/>\n                <form className='container'>\n\n                    <div className=\"dropdown\">\n                        <button className=\"btn btn-outline-tertiary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                            Type of Incident\n                        </button>\n                        <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n                            <a className=\"dropdown-item\" href=\"/report\">Antisocial Behaviour</a>\n                            <a className=\"dropdown-item\" href=\"/report\">Another thing</a>\n                            <a className=\"dropdown-item\" href=\"/report\">Something else here</a>\n                        </div>\n                    </div>\n\n                    <br/>\n\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"otherComment\" className=\"col-sm-2 col-form-label\">Comment</label>\n                        <div className=\"col-sm-10\">\n                            <textarea type=\"textarea\" className=\"form-control\" id=\"otherComment\" placeholder=\"Any other comments\"/>\n                        </div>\n                    </div>\n\n                    <button type=\"button\" className=\"btn btn-outline-primary\">Find Me</button>\n                    <br/><br/>\n\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"email\" className=\"col-sm-2 col-form-label\">Email</label>\n                        <div className=\"col-sm-10\">\n                            <input type=\"email\" className=\"form-control\" id=\"email\" placeholder=\"someone@somewhere.co.uk\"/>\n                        </div>\n                    </div>\n\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    \n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Report","export const iconList = {\n    cycles : 'cycles.png',\n    bus : 'bus.png',\n    dlr : 'dlr.png',\n    elizabeth : 'elizabeth.png',\n    emirates : 'emirates.jpeg',\n    overground : 'overground.png',\n    twitter : 'twitter.png',\n    underground : 'underground.png',\n}\n\nexport default iconList","export const issues = {\n    0 : {\n            type : 'dlr',\n            where : 'Stratford',\n            when : '19/07/19 13:02',\n            what : 'Tripped over crooked floor tile',\n        },\n    1 : {\n            type : 'elizabeth',\n            where : 'Liverpool Street',\n            when : '20/07/2032 13:02',\n            what : 'Signal Problems',\n        },\n    2 : {\n            type : 'emirates',\n            where : 'Greenwich',\n            when : '19/07/19 13:02',\n            what : 'Fantastic everyday mode of transport',\n        },\n    3 : {\n            type : 'twitter',\n            where : 'Dalston',\n            when : '01/04/1900',\n            what : 'Time travelling April Fools',\n        }\n}\n\nexport default issues","import React, { Component } from \"react\";\nimport './overview.css'\nimport iconList from \"../constants/icons\";\n\nimport { NavLink } from 'react-router-dom'\nimport issues from \"../constants/issues\";\n\nclass Overview extends Component {\n    render() {\n        document.title = 'Overview'\n\n        const path = window.location\n\n        const preImage = path.hostname === 'simpsonthomas.github.io' && path.pathname !== '/tfl-safety/' ? 'tfl-safety/'\n            : ''\n\n        function boxMaker(type, where, when, what, number) {\n            return(\n                <>\n                    <div className='box'>\n                        <br/>\n                        <div className='row'>\n                            <div className='col-1'/>\n                            <NavLink className='col-3' to={'/issue/'+number}>\n                                <img src={preImage + 'icons/'+iconList[type]} className='iconImage' alt={'Icon of '+type}/>\n                            </NavLink>\n                            <div align='left'>\n                                <p><b>Where: </b>{where}</p>\n                                <p><b>When: </b>{when}</p>\n                                <p><b>What: </b>{what}</p>\n                            </div>\n                        </div>\n\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <button type=\"button\" className=\"btn btn-danger\">Police</button>\n                            <button type=\"button\" className=\"btn btn-outline-secondary\">Station Control</button>\n                            <button type=\"button\" className=\"btn btn-outline-secondary\">Long-term</button>\n                            <button type=\"button\" className=\"btn btn-outline-danger\">Delete</button>\n                        </div>\n                        <br/><br/>\n                    </div>\n                    <br/>\n                </>\n            )\n        }\n\n        return (\n            <div className='container text-center content-center'>\n                <h3>Inicident Dashboard Testing</h3>\n                <div className='row'>\n                    <img src={preImage + \"london-map.png\"} height='500px' className='col-5' alt='Map of London'/>\n                    <div className='col-1'/>\n                    <div align='center'>\n                        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n                            <button type=\"button\" className=\"btn btn-outline-info\">Cycle</button>\n                            <button type=\"button\" className=\"btn btn-outline-info\">Walking</button>\n                            <button type=\"button\" className=\"btn btn-outline-info\">Bus</button>\n                            <button type=\"button\" className=\"btn btn-outline-info\">Tube</button>\n                        </div>\n\n                        <br/><br/>\n                        <div className='issueList'>\n                            {Object.keys(issues).map(issueNo => {\n                                const issue = issues[issueNo]\n                                return boxMaker(issue.type, issue.where, issue.when, issue.what, issueNo)\n                            })}\n                        </div>\n\n                    </div>\n\n                    \n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Overview","import About from \"../simplePages/about\";\nimport Report from \"../pages/report\";\nimport Overview from \"../pages/overview\";\n\nexport const pageList = [\n    {\n        name: 'Report Issue',\n        link: '/report',\n        nav: true,\n        side: 'left',\n        component: Report,\n    },\n    {\n        name: 'Overview Issues',\n        link: '/overview',\n        nav: true,\n        side: 'right',\n        component: Overview,\n    },\n    {\n        name: 'Overview Issues',\n        link: '/',\n        nav: false,\n        side: 'none',\n        component: Overview,\n    },\n    {\n        name: 'Overview Issues',\n        link: '/tfl-safety',\n        nav: false,\n        side: 'none',\n        component: Overview,\n    },\n    {\n        name: 'About',\n        link: '/about',\n        nav: false,\n        side: 'none',\n        component: About,\n    },\n]\n\nexport default pageList","import React, { Component } from \"react\";\nimport { NavLink } from 'react-router-dom'\n\nimport \"./navigation.css\"; // navigation styles\n\nimport 'bootstrap'; // needs to be imported to enable collapsing navbar\nimport pageList from \"../../constants/pages\";\n\nclass Navigation extends Component {\n    /*constructor(props) {\n        super(props)\n    }*/\n\n    /**\n     * Generates the buttons for the navbar\n     * \n     * @param {*} item - the dictionary containing the name and link of the navbar item we are creating\n     * @param {*} navClass - any special classes for this nav-item\n     */\n    navBut(item, navClass='') {\n        return (\n            <li className='nav-item' key={item.name}>\n                <NavLink \n                    className={navClass+\" nav-link \"+item.name}\n                    id={item.link.split('/')[1]+'NavLink'}\n                    to={item.link}\n                >\n                    {item.name}\n                </NavLink>\n            </li>\n        )\n    }\n\n    render() {\n        return (\n            <nav className=\"navbar navbar-expand-sm navbar-dark sticky-top\">\n                    <button \n                        className=\"navbar-toggler\" \n                        type=\"button\" \n                        data-toggle=\"collapse\" \n                        data-target=\"#navbarSupportedContent\" \n                        aria-controls=\"navbarSupportedContent\" \n                        aria-expanded=\"false\" \n                        aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                    </button> \n                    \n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        {/*Elements that display in the collapsed menu and full width menu*/}\n                        <ul className=\"navbar-nav mr-auto\">\n\n                            {pageList.map(page => {\n                                if (page.nav && page.side === 'left') return this.navBut(page)\n                                else return null\n                            })}\n                            &nbsp; {/*Spacer*/}\n                        </ul>\n                        <span>\n                            {/*Right side of navbar*/}\n                            <ul className=\"navbar-nav mr-auto\">\n                                \n                            {pageList.map(page => {\n                                if (page.nav && page.side === 'right') return this.navBut(page)\n                                else return null\n                            })}\n                            </ul>\n                        </span>\n\n                    </div>\n\n\n            </nav>\n        )\n    }\n}\n\nexport default Navigation","// uses data from here\n// https://stackoverflow.com/questions/52161128/react-redux-state-is-lost-at-page-refresh\n\n/* \n    This is how data is stored across page refreshes\n    We minimise refreshes on our end, but the user may do it themselves\n    It only stores data for the session, nothing saved inbetween sessions\n*/\n\nconst initialState = {\n    // the initial state, this is what we load on app start\n    \n}\n\n/**\n * This loads the state out of session storage on app reloads, or uses the initial state if it is first load\n */\nconst loadState = () => {\n    // this will try and load the state out of session storage\n    try {\n        const serializedState = sessionStorage.getItem('state');\n            // saved under item 'state'\n        if(serializedState === null) {\n            // returns the initial state if there is no state in storage (ie first load of session)\n            return initialState;\n        }\n        // otherwise is parses the stored state and returns that\n        return JSON.parse(serializedState);\n    } catch (e) {\n        // if there are any errors it returns the initial state\n        return initialState\n    }\n};\n  \n/**\n * This saves the current state to session storage\n * \n * @param {*} state - This is the current state to be saved to session storage\n */\nconst saveState = (state) => {\n    try {\n        const serializedState = JSON.stringify(state);\n        sessionStorage.setItem('state', serializedState);\n    } catch (e) {\n    // Ignore write errors;\n    // Probably need to put some code here\n    }\n};\n\nexport {saveState, loadState, initialState}","import React, { Component } from \"react\";\nimport issues from \"../constants/issues\";\nimport iconList from \"../constants/icons\";\n\nimport Plot from 'react-plotly.js';\n\nclass Issue extends Component {\n    render() {\n        document.title = 'Issue'\n\n        const issueNo = window.location.pathname.substring(7)\n        const issue = issues[issueNo]\n\n        const path = window.location\n\n        const preImage = path.hostname === 'simpsonthomas.github.io' ? '../tfl-safety'\n            : '/'\n\n        console.log('Test')\n\n        const fakeNumber = 1427+parseInt(issueNo)\n        \n        const dataGraph = [\n            {\n                x: [1, 2, 3],\n                y: [2, 6, 3],\n                type: 'scatter',\n                mode: 'lines+points',\n                marker: {color: 'red'},\n                name: 'Lower Bound',\n                orientation: 'h',\n            },\n        ];\n        var layout = {\n            margin: {l:'auto',r:0,b:15,t:0,pad:0},\n            //xaxis: {range: [-100, 100]},\n            //barmode: 'stack',\n            paper_bgcolor: '#868F98',\n            plot_bgcolor: '#868F98',\n            font : {\n                color: 'white'\n            }\n        }\n\n        return (\n            <div className='container text-center content-center'>\n                <h3>{'Issue #'+fakeNumber}</h3>\n                <hr/>\n                <img src={preImage + 'icons/'+iconList[issue.type]} className='iconImage' alt={'Icon of '+issue.type}/>\n                <br/><br/>\n\n                <div align='center'>\n                    <p><b>Where: </b>{issue.where}</p>\n                    <p><b>When: </b>{issue.when}</p>\n                    <p><b>What: </b>{issue.what}</p>\n                </div>\n\n                <Plot \n                    data={dataGraph} \n                    layout={layout}\n                    config={{scrollZoom: false, staticPlot: true}}\n                />\n            </div>\n        )\n    }\n}\n\nexport default Issue","import React, { Component } from \"react\";\nimport { Route, Switch, /*Redirect*/} from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\n// Components to display\nimport Navigation from './navigation/navigation.js';\n\n// state functions\nimport { /*saveState,*/ loadState} from './components/persist';\n\nimport './components/App.css';\nimport { pageList } from \"../constants/pages.js\";\nimport Issue from \"../pages/issue.js\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props)\n        this.state = loadState()\n            // loads the state from storage, runs when the page reloads only\n    }\n\n    /**\n     * This creates routes for the app, passing through the account and adminview properties, it is the route maker most apps will need\n     * \n     * @param {*} item - an item containing all the details for a new route\n     */\n    routeMaker(item) {\n        // returns routes\n        return(\n            <Route\n                key={item.link}\n                component={item.component}\n                exact path={item.link}\n            />\n        )\n    }\n\n    render() {\n      return (\n          <div className='App'>\n            <Router>\n                <>  \n                  <>\n                      <div className='body'>\n                          <Navigation></Navigation>\n                          <br/>\n                          <Switch>\n                              {/* Render page based on the constants*/}\n\n                             \n                              {pageList.map(page => this.routeMaker(page))}\n                              <Route\n                                component={Issue}\n                                path='/issue'\n                              />\n                              <Route component={() => \n                                <center>\n                                  <p>Sorry page not found</p>\n                                </center>\n                                } />\n                          </Switch>\n                      </div>\n                  </>\n                </>\n            </Router>\n            </div>\n        )\n    }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './core/components/index.css';\nimport App from './core/App';\nimport * as serviceWorker from './core/components/serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}